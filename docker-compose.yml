version: '3'

services:
  db:
    image: mariadb
    container_name: db
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    restart: unless-stopped
    volumes:
      - db:/var/lib/mysql
    env_file:
      - db.env
      - .env
    networks:
      - default

  adminer:
    image: adminer:4.6.3
    container_name: adminer
    environment:
      - VIRTUAL_HOST=${ADMINER_MARIA_VIRTUAL_HOST}
      - LETSENCRYPT_HOST=${ADMINER_MARIA_LETSENCRYPT_HOST}
      - LETSENCRYPT_EMAIL=it@oberfeld.be
    networks:
      - proxy-tier
      - default

  nextcloud:  
    container_name: nextcloud
    build: ./nextcloud
    restart: unless-stopped
    volumes:
      - nextcloud:/var/www/html
    environment:
      - NEXTCLOUD_TRUSTED_DOMAINS=${NEXTCLOUD_VIRTUAL_HOST}
      - VIRTUAL_HOST=${NEXTCLOUD_VIRTUAL_HOST}
      - LETSENCRYPT_HOST=${NEXTCLOUD_LETSENCRYPT_HOST}
      - LETSENCRYPT_EMAIL=it@oberfeld.be
      - MYSQL_HOST=db
    env_file:
      - db.env
      - .env
    depends_on:
      - db
    networks:
      - proxy-tier
      - default

  portainer:
    image: portainer/portainer
    container_name: portainer
    command: --admin-password ${PORTAINER_PASSWORD_HASH}
    restart: always
    volumes:
      - portainer_data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - VIRTUAL_HOST=${PORTAINER_VIRTUAL_HOST} 
      - LETSENCRYPT_HOST=${PORTAINER_LETSENCRYPT_HOST}
      - LETSENCRYPT_EMAIL=it@oberfeld.be
    env_file:
      - .env
    networks:
      - proxy-tier

  elasticsearch:
    build: ./elasticsearch
    container_name: elasticsearch
    restart: always
    environment:
      - cluster.name=green-cluster
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - index.number_of_shards=1
      - index.number_of_replicas=0
      - "ES_JAVA_OPTS=-Xms${ELASTICSEARCH_MEM_IN_MB}m -Xmx${ELASTICSEARCH_MEM_IN_MB}m"
    ports:
      - 9200:9200
      - 9300:9300
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - default

  proxy:
    build: ./proxy
    container_name: proxy
    restart: always
    ports:
      - 80:80
      - 443:443
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: ${USE_LETSENCRYPT}
    volumes:
      - certs:/etc/nginx/certs:ro
      - vhost.d:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - proxy-tier

  letsencrypt-companion:
    image: jrcs/letsencrypt-nginx-proxy-companion
    restart: always
    volumes:
      - certs:/etc/nginx/certs
      - vhost.d:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - proxy-tier
    depends_on:
      - proxy

  volumerize:
    container_name: volumerize
    build: ./volumerize
    environment:
      - VOLUMERIZE_SOURCE=/source
      - VOLUMERIZE_TARGET=${BACKUP_TARGET}
      - VOLUMERIZE_JOBBER_TIME=0 0 3 * * *
      - VOLUMERIZE_CONTAINERS=db nextcloud
      - PASSPHRASE=${BACKUP_PASSWORD}
      - VOLUMERIZE_FULL_IF_OLDER_THAN=1M
      - TZ=Europe/Berlin
      - AWS_ACCESS_KEY_ID=    ${BACKUP_AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${BACKUP_AWS_SECRET_ACCESS_KEY}
      - VOLUMERIZE_DUPLICITY_OPTIONS=--file-prefix-archive=archive-
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - db:/source/db:ro  
      - nextcloud:/source/nextcloud:ro
#      - ./keys:/keys

volumes:
  db:
  nextcloud:
  certs:
  vhost.d:
  html:
  portainer_data:
  esdata:

networks:
  proxy-tier:
   
